name: Release
on:
  release:
    types: [published]
jobs:
  version:
    name: Calculate Version
    runs-on: ubuntu-latest
  
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Generate Package Version
      id: version
      shell: pwsh
      run: Write-Host "::set-output name=version::$('${{ github.event.release.tag_name }}'.substring(1))"

    - name: Set Package Version
      uses: ciiiii/toml-editor@1.0.0
      with:
        file: Cargo.toml
        key: package.version
        value: ${{ steps.version.outputs.version }}

    - name: Stash Versioned Cargo.toml
      uses: actions/upload-artifact@v2
      with:
        name: cargofile
        path: Cargo.toml
    
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs:
      - version
    strategy:
      matrix:
        os_name: [windows, linux, darwin]
        arch: [amd64]
        include:
          - arch: amd64
          - os_name: windows
            os: windows-latest
            extension: ".exe"
          - os_name: linux
            os: ubuntu-latest
          - os_name: darwin
            os: macos-latest

    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libdbus-1-3 libdbus-1-dev
      if: matrix.os_name == 'linux'
      
    - name: Get Rust Stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Check out code
      uses: actions/checkout@v2

    - name: Fetch Versioned Cargo.toml
      uses: actions/download-artifact@v2
      with:
        name: cargofile

    - name: Build Release
      uses: actions-rs/cargo@v1.0.1
      with:
        command: build
        args: --release
        
    - name: Create Sentry Release
      uses: tclindner/sentry-releases-action@v1.0.0
      env:
        SENTRY_ORG: sierra-softworks
        SENTRY_PROJECT: git-tool
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      with:
        environment: git-tool
        tagName: git-tool@${{ github.event.release.tag_name }}
      if: matrix.os_name == 'linux'

    - name: Upload to Release
      uses: Shopify/upload-to-release@1.0.0
      with:
        name: "git-tool-${{ matrix.os_name }}-${{ matrix.arch }}${{ matrix.extension }}"
        path: "target/release/git-tool${{ matrix.extension }}"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        content-type: application/octet-stream
