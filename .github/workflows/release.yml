name: Release
on:
  release:
    types: [published]
jobs:
  version:
    name: Start Release
    runs-on: ubuntu-latest

    steps:
      - name: Setup Sentry CLI
        uses: mathrix-education/setup-sentry-cli@1.1.0
        with:
          token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          organization: sierra-softworks
          project: git-tool

      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Sentry Release
        run: |
          VERSION="git-tool@${{ github.event.release.tag_name }}"
          sentry-cli releases new "$VERSION"
          sentry-cli releases set-commits "$VERSION" --auto

      - name: Generate Package Version
        id: version
        shell: pwsh
        run: Write-Host "::set-output name=version::$('${{ github.event.release.tag_name }}'.substring(1))"

      - name: Set Package Version
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: Cargo.toml
          key: package.version
          value: ${{ steps.version.outputs.version }}

      - name: Stash Versioned Cargo.toml
        uses: actions/upload-artifact@v2
        with:
          name: cargofile
          path: Cargo.toml

  build:
    name: Build
    runs-on: ${{ matrix.run_on }}
    continue-on-error: ${{ matrix.experimental || false }}
    needs:
      - version
    strategy:
      matrix:
        include:
          # Windows builds
          - arch: amd64
            os: windows
            run_on: windows-latest
            target: x86_64-pc-windows-gnu
            extension: .exe

          # Linux builds
          - arch: amd64
            run_on: ubuntu-latest
            os: linux
            target: x86_64-unknown-linux-gnu
            setup: |
              sudo apt-get update
              sudo apt-get install -y libdbus-1-3 libdbus-1-dev
          # - arch: "386"
          #   os: linux
          #   run_on: ubuntu-latest
          #   target: i686-unknown-linux-gnu
          #   experimental: true
          #   setup: |
          #     sudo apt-get update
          #     sudo apt-get install -y libdbus-1-3 libdbus-1-dev gcc-multilib

          # Apple MacOS builds
          - arch: amd64
            run_on: macos-latest
            os: darwin
            target: x86_64-apple-darwin
          - arch: arm64
            run_on: macos-latest
            os: darwin
            target: aarch64-apple-darwin
            experimental: true
            setup: |
              echo "Updating to XCode 12.3 with Apple ARM (M1) support"
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
              sudo xcode-select -s "/Applications/Xcode_12.3.app"

    steps:
      - name: setup dependencies
        run: ${{ matrix.setup }}
        if: matrix.setup

      - name: Get Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Setup Sentry CLI
        uses: mathrix-education/setup-sentry-cli@1.1.0
        with:
          token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          organization: sierra-softworks
          project: git-tool

      - name: Check out code
        uses: actions/checkout@v2

      - name: Fetch Versioned Cargo.toml
        uses: actions/download-artifact@v2
        with:
          name: cargofile

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload Debug Symbols to Sentry
        run: |
          sentry-cli upload-dif -o sierra-softworks -p git-tool --include-sources ./target/${{ matrix.target }}/release/

      - name: Strip Debug Symbols
        run: |
          strip --strip-debug target/${{ matrix.target }}/release/git-tool${{ matrix.extension }}
        if: matrix.os == 'linux'

      - name: Upload GitHub Release Artifacts
        uses: Shopify/upload-to-release@v1.0.1
        with:
          name: "git-tool-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}"
          path: "target/${{ matrix.target }}/release/git-tool${{ matrix.extension }}"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          content-type: application/octet-stream

  sentry:
    name: Finalize Release
    runs-on: ubuntu-latest
    needs:
      - version
      - build

    steps:
      - name: Setup Sentry CLI
        uses: mathrix-education/setup-sentry-cli@1.1.0
        with:
          token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          organization: sierra-softworks
          project: git-tool

      - name: Finalize Sentry Release
        run: |
          VERSION="git-tool@${{ github.event.release.tag_name }}"
          sentry-cli releases finalize "$VERSION"
